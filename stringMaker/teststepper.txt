/**
   Maquina de Cuerdas de Guido Wardak
   @author Egar Almeida
*/

//#include <Keypad.h>
//#include <LiquidCrystal_PCF8574.h>
#include "config.h"
#include "stepperController.h"
#include "utils.h"


sRowAxis rowAxis;

StepperController stepper(rowAxis, MOTOR_PIN_D_STEP, MOTOR_PIN_D_DIR, MOTOR_PIN_A_ENABLED, 8, 200);

void setup() {
   pinMode(MOTOR_PIN_A_ENABLED, OUTPUT);

  Serial.begin(115200);
}

void loop() {
  digitalWrite(MOTOR_PIN_A_ENABLED, LOW);
  stepper.start();
  stepper.spin(60, 's');
}

#include <AccelStepper.h>

#define X_STEP_PIN         2
#define X_DIR_PIN          5
#define X_ENABLE_PIN       8

// Create an instance of the AccelStepper class
// AccelStepper::DRIVER (1) means a stepper driver (with Step and Direction pins)
// If you're using a driver board, you only need to specify 2 pins (step and dir)
// The others (enable, min, max) can be ignored.
AccelStepper stepperX(AccelStepper::DRIVER, X_STEP_PIN, X_DIR_PIN);

void setup() {
  pinMode(X_ENABLE_PIN, OUTPUT);
  digitalWrite(X_ENABLE_PIN, LOW); // Set enable pin low to enable stepper driver

  stepperX.setMaxSpeed(1000.0);    // Set max speed
  stepperX.setSpeed(1000.0);       // Set current speed
}

void loop() {
  // Call runSpeed to move the stepper at the current speed
  if (stepperX.speed() > 0 && stepperX.distanceToGo() == 0)
    stepperX.move(-10000); // Move in the opposite direction
  else if (stepperX.speed() < 0 && stepperX.distanceToGo() == 0)
    stepperX.move(10000); // Move in the opposite direction

  stepperX.run();
}
